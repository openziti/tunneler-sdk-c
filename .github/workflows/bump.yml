name: Bump version
on:
  push:
    branches:
      - master
jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.make_tag.outputs.new_tag }}
    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: '0'
    - name: Bump version and push tag
      id: make_tag
      uses: anothrNick/github-tag-action@1.22.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch

  build:
    runs-on: ${{ matrix.os }}
    needs: tag
    strategy:
      matrix:
        os:
          - ubuntu-16.04
          - macOS-latest
        toolchain: [ default.cmake ]
        arch: [ x86_64 ]
        install: [ '' ]

        include:
          - os: ubuntu-16.04
            arch: arm
            toolchain: Linux-arm.cmake
            install: crossbuild-essential-armhf

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: install tools
      if: matrix.install != ''
      run: sudo apt install ${{matrix.install}}
    - name: make build dir
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: configure cmake
      run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/toolchains/${{matrix.toolchain}} -S ${{ github.workspace }} -B ${{runner.workspace}}/build
    - name: build
      run: cmake --build ${{runner.workspace}}/build --target bundle
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-${{matrix.arch}}
        path: ${{ runner.workspace }}/build/bundle/*.zip

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [ tag, build ]
    steps:
    - name: download
      uses: actions/download-artifact@v2
      with:
        path: ${{ runner.workspace }}/downloads/
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.tag.outputs.release_tag }}
        release_name: Release ${{ needs.tag.outputs.release_tag }}
    - name: upload Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{runner.workspace}}/downloads/Linux-x86_64/ziti-edge-tunnel-Linux_x86_64.zip
        asset_name: ziti-edge-tunnel-Linux_x86_64.zip
        asset_content_type: application/octet-stream

    - name: upload Linux ARM
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{runner.workspace}}/downloads/Linux-arm/ziti-edge-tunnel-Linux_arm.zip
        asset_name: ziti-edge-tunnel-Linux_arm.zip
        asset_content_type: application/octet-stream

    - name: upload MacOS
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{runner.workspace}}/downloads/macOS-x86_64/ziti-edge-tunnel-Darwin_x86_64.zip
        asset_name: ziti-edge-tunnel-Darwin_x86_64.zip
        asset_content_type: application/octet-stream